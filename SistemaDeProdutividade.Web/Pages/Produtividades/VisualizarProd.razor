@page "/produtividades/visualizar"
@using SistemaDeProdutividade.Web.DTOs
@using SistemaDeProdutividade.Web.Handlers
@using SistemaDeProdutividade.Web.Models
@inherits VisualizarProdPage
@inject AuthHandler authHandler;

<PageTitle>Visualizar produtividade</PageTitle>

<MudContainer MinHeight="130px" Width="100%" Class="d-flex justify-space-between" >
    <MudContainer MaxWidth="MaxWidth.Medium" Class="d-flex align-center">
        <MudContainer Class="d-inline">
            <MudText Typo="Typo.h4" Class="px-4">Detalhes</MudText>
            <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Visualize todas as informações da produtividade selecionada</MudText>
        </MudContainer>
     </MudContainer>

    <MudContainer MaxWidth="MaxWidth.Medium" Class="d-flex align-center justify-end gap-4">
        @if (user.Perfil == "Admin")
        {
            <MudButton Variant="Variant.Filled" Color="Color.Error" Class="rounded-lg" Style="height: 44px; width: 150px;">Devolver</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="rounded-lg" Style="height: 44px; width: 150px;">Finalizar</MudButton>

        }
        else if(user.Perfil == "Chefe")
        {
            <MudButton Variant="Variant.Filled" Color="Color.Success" Class="rounded-lg" Style="height: 44px; width: 150px;">Assinar</MudButton>  
        }
    </MudContainer>
</MudContainer>
<br>
<MudPaper MinHeight="350px" Width="100%" Class="py-12 px-6">
    <MudContainer Class="d-flex" Fixed="true" Style="height: 130px" >
        <MudContainer Style="width=45%;">
            <MudText Typo="Typo.h6"> <b>@ProdData.NomeUsuario</b></MudText>
            <MudText Typo="Typo.body2">Matrícula: @ProdData.MatriculaUsuario</MudText>
            <MudText Typo="Typo.body2">Cargo: @ProdData.CargoUsuario</MudText>
            <MudText Typo="Typo.body2">Lotação: @ProdData.Lotacao</MudText>
        </MudContainer>
        <MudContainer Style="width=45%;">
            <MudText Typo="Typo.h6" Class="d-flex justify-end"><b> @ProdData.Status</b></MudText>
            <MudStack>
                <MudText Class="d-flex justify-end"><b>Período:</b> @ProdData.DataInicio.ToString("dd/MM/yyyy") à @ProdData.DataFim.ToString("dd/MM/yyyy")</MudText>
                <MudText Typo="Typo.h6" Class="d-flex justify-end"> <b> @(Atividades.Sum(x => x.Quantidade * x.Peso)) Pontos</b></MudText>
            </MudStack>
        </MudContainer>
    </MudContainer>
    <MudContainer Fixed="true" Style="min-height: 80px">
        <MudTable T="AtividadeParaPontuar" Items="@Atividades" Hover="true" Breakpoint="Breakpoint.Sm" @ref="mudTable">
            <HeaderContent>
                <MudTh>nº</MudTh>
                <MudTh>Descrição da Atividade</MudTh>
                <MudTh>Peso</MudTh>
                <MudTh>Quantidade</MudTh>
                <MudTh>Subtotal</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="nº">@context.Number</MudTd>
                <MudTd DataLabel="Descrição da Atividade">@context.Descricao</MudTd>
                <MudTd DataLabel="Peso" Style="text-align: center">@context.Peso</MudTd>
                <MudTd DataLabel="Quantidade" Style="text-align: center">@context.Quantidade</MudTd>
                <MudTd DataLabel="Subtotal" Style="text-align: end">@(context.Quantidade * context.Peso) </MudTd>
            </RowTemplate>
        </MudTable>
    </MudContainer>
</MudPaper>

@code {
    private UsuarioDto user;
    private MudTable<AtividadeParaPontuar> mudTable;
    private static IEnumerable<AtividadeParaPontuar> Atividades = new List<AtividadeParaPontuar>()
    {
        new AtividadeParaPontuar()
        {
            Number = 1,
            Descricao = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
            Peso = 3,
            Quantidade = 5,
        },
        new AtividadeParaPontuar()
        {
            Number = 2,
            Descricao = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
            Peso = 3,
            Quantidade = 10,
        },
        new AtividadeParaPontuar()
        {
            Number = 3,
            Descricao = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
            Peso = 3,
            Quantidade = 10,
        },
        

    };
    protected override async Task OnInitializedAsync()
    {

        user = await authHandler.GetUserAsync();

    }
    private int TotalPts = Atividades.Sum(x => x.Quantidade * x.Peso);
}